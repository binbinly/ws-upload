<?php

namespace App\Lib\Upload\FileType;

use Exception;

/**
 * 图片处理
 * Class Image
 * @package App\Lib\Upload\FileType
 */
class Image extends FileAdapter
{
    protected $mimeType = ['image/png', 'image/jpg', 'image/jpeg'];

    protected $subDir = 'img/';

    protected $ext = ['jpg', 'jpeg', 'png'];

    protected $scaleConf;

    /**
     * @return string
     */
    public function getThumbDir(): string
    {
        return $this->scaleConf['thumb_dir'];
    }

    /**
     * @param array $scaleConf
     * @return $this
     */
    public function setScaleConf(array $scaleConf)
    {
        $this->scaleConf = $scaleConf;
        return $this;
    }

    /**
     * @param \FileUpload\File $file
     * @param string $targetPath
     * @return bool
     */
    public function validate($file, $targetPath): bool
    {
        $thumbPath = $targetPath . $this->getThumbDir() . $file->getClientFileName();
        if ($this->doesFileExist($thumbPath)) {//存在同名文件时先删除
            unlink($thumbPath);
        }
        return parent::validate($file, $targetPath); // TODO: Change the autogenerated stub
    }

    /**
     * @param \FileUpload\File $file
     * @throws Exception
     */
    public function callback($file): void
    {
        //生成缩略图
        $scalePath = dirname($file->getRealPath()) . '/' . $this->getThumbDir() . $file->getFilename();
        \Gregwar\Image\Image::open($file->getRealPath())
            ->resize($this->scaleConf['width'], $this->scaleConf['height'])
            ->save($scalePath);

        parent::callback($file);
    }
}